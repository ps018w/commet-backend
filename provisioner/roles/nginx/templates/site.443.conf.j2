# {{ ansible_managed }}

server {
    listen       {{ ngnix_listen }};
    listen       [::]:{{ ngnix_listen }};
    server_name  {{ domain_name }};

    ssl_certificate     {{ ssl_certificate }};
    ssl_certificate_key {{ ssl_certificate_key }};
    ssl_dhparam         {{ ssl_dhparam }};


    ssl_protocols {{ ssl_protocols }};
    ssl_ciphers '{{ ssl_ciphers }}';
    ssl_prefer_server_ciphers on;

    ssl_session_timeout {{ ssl_session_timeout }};
    ssl_session_cache {{ ssl_session_cache }};
    ssl_session_tickets off;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate {{ ssl_trusted_certificate }};


    access_log   {{ access_log_file }};
    error_log    {{ error_log_file }};


    client_max_body_size {{ nginx_client_max_body_size }};

    {% if use_letsencrypt %}
    location /.well-known/acme-challenge {
            root {{ letsencrypt_challange_root }};
            try_files $uri =404;
    }
    {% endif %}

    location /docs {
        # mkdocs html generated via "product_data" role
        alias {{ project_path }}/_docs_html/;
    }

    # Setup celery-flower
    location ~ ^/flower/? {
        sub_filter_last_modified on;
        sub_filter_once off;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_redirect off;
        proxy_pass http://unix:///tmp/celeryflower-{{ project_namespace }}.sock;
    }

    # Setup named location for Django requests and handle proxy details
    location / {
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass http://uvicorn-{{ deploy_environment }};
    }

    location /static/ {
        alias {{ project_path }}/.staticfiles/;
    }

    location /media/ {
        alias {{ project_path }}/.media/;
    }
}

upstream uvicorn-{{ deploy_environment }} {
    server unix://{{ asgi_socket }};
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
